import React, { useState, useEffect } from "react";
import "./background-animations.css";
import supabase from "./connector";

const App = () => {
  const [dataMhs, setDataMhs] = useState([]);
  const [refresh, setRefresh] = useState(false);

  useEffect(() => {
    const fetchData = async () => {
      const { data, error } = await supabase.from("mahasiswa").select("*");

      if (error) {
        console.error("Error fetching data:", error);
      } else {
        setDataMhs(data);
      }
    };

    fetchData();
  }, [refresh]);

  const handleSubmit = async (event) => {
    event.preventDefault();

    let name = event.target.name.value;
    let nim = event.target.nim.value;
    let address = event.target.address.value;
    let phone = event.target.phone.value;

    console.info(name, nim, address, phone);

    const { data, error } = await supabase
      .from("mahasiswa")
      .insert([{ name: name, nim: nim, address: address, phone: phone }]);

    if (error) {
      console.error("Error inserting data:", error);
    } else {
      alert("Data berhasil disimpan");
      setDataMhs((prevData) => [...prevData, data[0]]);
      event.target.reset();
      setRefresh((prev) => (prev = !prev));
    }
  };

  useEffect(() => {
    const canvas = document.getElementById("backgroundCanvas");
    const ctx = canvas.getContext("2d");
    const particles = [];
    const colors = ["#FFFFFF", "#FFCC00", "#FF6699", "#66CCFF", "#00CC99"];

    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;

    const createParticles = () => {
      for (let i = 0; i < 100; i++) {
        particles.push({
          x: Math.random() * canvas.width,
          y: Math.random() * canvas.height,
          radius: Math.random() * 3 + 1,
          color: colors[Math.floor(Math.random() * colors.length)],
          speedX: Math.random() * 2 - 1,
          speedY: Math.random() * 2 - 1,
        });
      }
    };

    const drawParticles = () => {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      particles.forEach((particle) => {
        ctx.beginPath();
        ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);
        ctx.fillStyle = particle.color;
        ctx.fill();
        particle.x += particle.speedX;
        particle.y += particle.speedY;

        if (particle.x < 0 || particle.x > canvas.width) particle.speedX *= -1;
        if (particle.y < 0 || particle.y > canvas.height) particle.speedY *= -1;
      });
      requestAnimationFrame(drawParticles);
    };

    createParticles();
    drawParticles();

    window.addEventListener("resize", () => {
      canvas.width = window.innerWidth;
      canvas.height = window.innerHeight;
      particles.length = 0;
      createParticles();
    });
  }, []);

  return (
    <main className="relative min-h-screen flex items-center justify-center gradient-bg p-4 overflow-hidden">
      <canvas id="backgroundCanvas" className="absolute inset-0 z-0"></canvas>
      <div id="particle-container" className="absolute inset-0 z-0"></div>
      <div className="relative bg-white p-8 rounded-xl shadow-lg space-y-6 w-full max-w-md animate__animated animate__fadeInDown z-10">
        <h1 className="text-center text-2xl font-bold text-gray-800 animate__animated animate__bounceIn">
          Form Mahasiswa
        </h1>
        <form className="space-y-6" onSubmit={handleSubmit}>
          <div className="animate__animated animate__fadeInLeft">
            <label
              htmlFor="name"
              className="block text-sm font-medium text-gray-700"
            >
              Name Student
            </label>
            <input
              type="text"
              name="name"
              id="name"
              className="mt-2 block w-full border-gray-300 rounded-lg shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-200 focus:ring-opacity-50 sm:text-sm p-2 transition duration-500 ease-in-out transform hover:scale-105"
              required
            />
          </div>
          <div className="animate__animated animate__fadeInRight">
            <label
              htmlFor="nim"
              className="block text-sm font-medium text-gray-700"
            >
              NIM
            </label>
            <input
              type="text"
              name="nim"
              id="nim"
              className="mt-2 block w-full border-gray-300 rounded-lg shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-200 focus:ring-opacity-50 sm:text-sm p-2 transition duration-500 ease-in-out transform hover:scale-105"
              required
            />
          </div>
          <div className="animate__animated animate__fadeInLeft">
            <label
              htmlFor="address"
              className="block text-sm font-medium text-gray-700"
            >
              Address
            </label>
            <input
              type="text"
              name="address"
              id="address"
              className="mt-2 block w-full border-gray-300 rounded-lg shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-200 focus:ring-opacity-50 sm:text-sm p-2 transition duration-500 ease-in-out transform hover:scale-105"
              required
            />
          </div>
          <div className="animate__animated animate__fadeInRight">
            <label
              htmlFor="phone"
              className="block text-sm font-medium text-gray-700"
            >
              Phone
            </label>
            <input
              type="tel"
              name="phone"
              id="phone"
              className="mt-2 block w-full border-gray-300 rounded-lg shadow-sm focus:border-blue-500 focus:ring focus:ring-blue-200 focus:ring-opacity-50 sm:text-sm p-2 transition duration-500 ease-in-out transform hover:scale-105"
              required
            />
          </div>
          <button
            type="submit"
            className="w-full p-3 bg-blue-500 text-white rounded-lg font-semibold hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-opacity-75 transition duration-300 ease-in-out transform hover:scale-110 animate__animated animate__heartBeat"
          >
            Submit
          </button>
        </form>

        <table className="mt-6 w-full text-left table-auto">
          <thead>
            <tr>
              <th>
                <label htmlFor="all">
                  <input type="checkbox" />
                </label>
              </th>
              <th>ID</th>
              <th>Nama Mahasiswa</th>
              <th>NIM Mahasiswa</th>
              <th>Alamat</th>
              <th>No Telepon</th>
            </tr>
          </thead>
          <tbody>
            {dataMhs.map((e) => (
              <tr key={e.id}>
                <td>
                  <label htmlFor={e.id}>
                    <input type="checkbox" id={e.id} />
                  </label>
                </td>
                <td>{e.id}</td>
                <td>{e.name}</td>
                <td>{e.nim}</td>
                <td>{e.address}</td>
                <td>{e.phone}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </main>
  );
};

export default App;
